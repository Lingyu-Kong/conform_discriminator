=======================================================================
step  0  : finished,    time cost :  3.536067485809326 s
=======================================================================
Traceback (most recent call last):
  File "dmcg_main.py", line 118, in <module>
    intrinsic_loss,extrinsic_loss,intrinsic_rewards,extrinsic_rewards = discriminator.compute_loss_and_train(conforms, energy)
  File "/home/v-linyukong/work/conform_discriminator/DMCG_Discriminator/dmcg_discriminator.py", line 55, in compute_loss_and_train
    intrinsic_predict, extrinsic_predict = self.predict(conforms)
  File "/home/v-linyukong/work/conform_discriminator/DMCG_Discriminator/dmcg_discriminator.py", line 41, in predict
    intrinsic_predict=self.intrinsic_model(conforms)
  File "/home/v-linyukong/miniconda3/envs/crystal_generation/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/v-linyukong/work/conform_discriminator/DMCG_model/dmcg_nn.py", line 128, in forward
    node_attr,edge_attr,global_attr,edge_index=self.attr_init(conforms)
  File "/home/v-linyukong/work/conform_discriminator/DMCG_model/dmcg_nn.py", line 166, in attr_init
    distance_node[i]=torch.FloatTensor([distance_edge[j] for j in range((i*(conforms.shape[1]-1)),((i+1)*(conforms.shape[1]-1)))])
KeyboardInterrupt