Traceback (most recent call last):
  File "dmcg_main.py", line 118, in <module>
    intrinsic_loss,extrinsic_loss,intrinsic_rewards,extrinsic_rewards = discriminator.compute_loss_and_train(conforms, energy)
  File "/home/v-linyukong/work/conform_discriminator/DMCG_Discriminator/dmcg_discriminator.py", line 53, in compute_loss_and_train
    intrinsic_predict, extrinsic_predict = self.predict(conforms)
  File "/home/v-linyukong/work/conform_discriminator/DMCG_Discriminator/dmcg_discriminator.py", line 39, in predict
    intrinsic_predict=self.intrinsic_model(conforms)
  File "/home/v-linyukong/miniconda3/envs/crystal_generation/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/v-linyukong/work/conform_discriminator/DMCG_model/dmcg_nn.py", line 133, in forward
    node_attr_1,edge_attr_1,global_attr_1=layer(
  File "/home/v-linyukong/miniconda3/envs/crystal_generation/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/v-linyukong/work/conform_discriminator/DMCG_model/meta_layer.py", line 79, in forward
    node_attributes=self.global_node_attn(torch.repeat_interleave(global_attr, num_nodes, dim=0),node_attr,node_batch,global_attr.size(0))
  File "/home/v-linyukong/miniconda3/envs/crystal_generation/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/v-linyukong/work/conform_discriminator/DMCG_model/meta_layer.py", line 248, in forward
    attn_weight = softmax(attn_weight, index)
RuntimeError: The following operation failed in the TorchScript interpreter.
Traceback of TorchScript (most recent call last):
  File "/home/v-linyukong/miniconda3/envs/crystal_generation/lib/python3.8/site-packages/torch_geometric/utils/softmax.py", line 41, in softmax
    elif index is not None:
        N = maybe_num_nodes(index, num_nodes)
        src_max = scatter(src, index, dim, dim_size=N, reduce='max')
                  ~~~~~~~ <--- HERE
        src_max = src_max.index_select(dim, index)
        out = (src - src_max).exp()
  File "/home/v-linyukong/miniconda3/envs/crystal_generation/lib/python3.8/site-packages/torch_scatter/scatter.py", line 160, in scatter
        return scatter_min(src, index, dim, out, dim_size)[0]
    elif reduce == 'max':
        return scatter_max(src, index, dim, out, dim_size)[0]
               ~~~~~~~~~~~ <--- HERE
    else:
        raise ValueError
  File "/home/v-linyukong/miniconda3/envs/crystal_generation/lib/python3.8/site-packages/torch_scatter/scatter.py", line 72, in scatter_max
        out: Optional[torch.Tensor] = None,
        dim_size: Optional[int] = None) -> Tuple[torch.Tensor, torch.Tensor]:
    return torch.ops.torch_scatter.scatter_max(src, index, dim, out, dim_size)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ <--- HERE
RuntimeError: The expanded size of the tensor (2560) must match the existing size (48640) at non-singleton dimension 0.  Target sizes: [2560, 4, 1].  Tensor sizes: [48640, 1, 1]